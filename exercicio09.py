# Exercício 09

"""
Você está desenvolvendo um aplicativo que usa os dados do acelerômetro de um celular para detectar quedas. O acelerômetro registra as acelerações em três eixos, 
X, Y e Z, em intervalos de tempo de 0.1 segundo.

O objetivo é identificar se o celular pode ter sofrido uma queda, que ocorre quando a magnitude da aceleração é maior que 9 m/s2.

Crie uma função detectar_queda(dados_acelerometro) que receba uma lista de tuplas, onde cada tupla contém os valores de aceleração nos eixos 
X, Y e Z em um dado instante de tempo. A função deve retornar True se a magnitude da aceleração ultrapassar 9 m/s2 em algum momento, indicando uma possível queda, ou False caso contrário.

A magnitude da aceleração A pode ser calculada pela fórmula:

A = sqrt(X^2 + Y^2 + Z^2)

"""

aceleracoes = [
    (3.5489082079899514, 2.001345481770013, -3.8031670650123655),
    (0.07372749726808614, -3.0156264900703844, 7.5678366088293565),
    (0.5939130925481777, 0.41136232084937063, 9.8261963582983),
    (-2.224851283445936, 3.795400686299761, -8.784821877299382),
    (-0.47606067253069284, -1.6389723673050014, 9.449818523643724),
    (-7.895882316134191, 7.911247787096091, -6.544116795390689),
    (1.9839627374711952, 9.13936179538904, -9.778953267124262),
    (1.4771993114789534, 2.803691710316132, -4.3114025130751665),
    (-1.2836312421620661, -3.683961983247654, -1.5928323053445865),
    (3.063415839116022, -7.151529830143577, 8.915897684027563),
    (1.2786241492975758, -6.673014432021807, -4.727928486785671),
    (1.2727166397685519, 5.2069015829751315, -0.1720741646149353),
    (-6.864843826561826, -3.6671664674109756, -0.985192276056841),
    (-5.206398972167103, 5.8445167091941705, 4.387673247259027),
    (-7.466239261944441, 9.795427757123285, 9.467635614014402),
    (-2.0526625063834096, 4.413813006295893, 9.139415165846266),
    (-0.2435318794418162, -2.3569310967886707, 1.665548068271189),
    (-9.379138588515492, -9.156247981318087, 6.65940556162704),
    (3.2997155924075283, -1.23257334943842, -4.039818792494769),
    (4.325465147563515, -6.529793934085273, 1.1993769010099022),
    (-1.485000315717194, -4.9924716333303065, -4.856116382932695),
    (9.324296765904876, -1.5539052150314383, 0.8429723584643654),
    (-9.6202789834824, -0.17872054849379104, 1.7162166839534585),
    (4.459311935533712, 0.2871946030201755, -6.711304414510531),
    (-7.232343651884456, 8.5178172320478, -6.955427915022652),
    (-4.23493683938903, 0.009650389154609584, -7.829537122703001),
    (1.1013032558948073, -4.964779952489746, 2.4486276207894893),
    (-5.738228414096376, -5.021638629116925, 6.3915003467942135),
    (-9.545525836505549, -9.265809002027552, 0.7372874624782995),
    (9.53911417875258, 3.1210387620174025, -5.378790528606087),
    (4.399814213897507, -8.078288110840807, -0.7937363014129932),
    (-5.361637550614631, 6.091867946323259, -8.876207815106858),
    (9.55928928984073, 8.202734852407083, -0.09307308270769354),
    (4.15175386003477, 6.743772537596808, 5.289618156752612),
    (1.0353820689848963, -3.421698986912789, -9.000621117321252),
    (-0.13527669418158794, -2.390655298368907, 8.174006896178035),
    (8.442905743109858, -8.23255106510888, 0.2295142325430799),
    (8.581405752965189, 1.5584388152140285, 3.0174486043132926),
    (6.4398090809197335, 6.9573125233179525, 3.8206654995011196),
    (-1.3075917037423856, 3.456971638133533, -6.563598107206252),
    (-8.878765905661393, -2.5649323130134256, -5.0005530586474585),
    (5.802562863032335, -2.0372368385028334, 6.948936844209662),
    (-6.987828141945631, 1.7370274503987542, -0.40557736485997076),
    (7.297332808536705, 7.6024802101589515, -0.6055875437681397),
    (-3.89054106118925, -1.9326671916219258, -3.438961498999012),
    (8.821193163077943, 3.7991707863636606, -8.52519861591099),
    (-5.0896194236831205, -2.756794101921569, 8.052998381461634),
    (-0.5379985870977215, -8.914574376159262, -6.913015145462966),
    (-9.401791232199635, -3.215714970828625, 6.598740326934006),
    (3.0611623912616714, -7.933140206070268, -9.33110290320535),
    (7.977041618093018, 6.60338148303325, 2.077464060252513),
    (4.1487219749357696, 5.518027016830413, -5.2519824240551705),
    (-4.458662719187723, -6.347119731067041, 5.841477513334922),
    (4.151813186506825, -0.8785670716078879, -8.323679581639356),
    (8.63831670314886, 3.1704314716431004, -4.407529686073206),
    (-5.186336485034113, 3.572971697612534, -4.949610693357065),
    (-5.356649254925681, -9.367287647694196, 8.324935612735885),
    (-3.0848326763745675, 9.222632602940152, 7.271971378591722),
    (6.29379243537295, 0.890854616508177, -0.7641046623141783),
    (-7.598061573509785, -9.527090825430323, -0.9433048878050325),
]


def detectar_queda(dados_acelerometro):
    return None


def main():
    resultado = detectar_queda(aceleracoes)
    print("Foram detectadas quedas:", resultado)


if __name__ == "__main__":
    main()
